plugins {
    id 'ata-curriculum.snippets-conventions'
    id 'ata-curriculum.integration-test-conventions'
}

dependencies {
    implementation 'javax.inject:javax.inject:1'
    implementation 'com.google.dagger:dagger:2.8'
    annotationProcessor 'com.google.dagger:dagger-compiler:2.30'
    implementation project(":ExecutorServices:RingUpdatesCheck")
}

checkstyle {
    def suppressionFile = rootProject.file('Utilities/ATACheckstyle/configuration/checkstyle/unit1/suppressions.xml')
    configProperties.put('checkstyle.suppression.filter', suppressionFile)
}

def wflowToTestsMap = [
        'groupwork-complianceenforcer-phase1-test': [
                'com.kenzie.groupwork.complianceenforcer.Phase1Test'
        ],
        'groupwork-complianceenforcer-phase2-test': [
                'com.kenzie.groupwork.complianceenforcer.Phase2Test'
        ]
]

wflowToTestsMap.forEach { wflowName, testList ->
    tasks.register(wflowName) {
        dependsOn wflowtest
        test.doFirst {
            filter {
                testList.each { includeTestsMatching it }
            }
        }
    }
}
